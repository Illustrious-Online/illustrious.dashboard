name: "[ill.cloud] Perform release"
on:
  pull_request_review:
    types:
      - submitted
    branches:
      - main
    paths:
      - 'apps/ill.cloud/**'
jobs:
  cloud-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}
      - name: Install spaces-cli
        run: bun install -g spaces-cli
      - name: Download dependency files
        run: |
          export SPACE_URL=https://${{ secrets.SPACE_NAME }}.${{ secrets.SPACE_REGION }}.digitaloceanspaces.com
          spaces-cli down $SPACE_URL/cloud/ci-production.env -o ./apps/ill.cloud/.env -k ${{ secrets.SPACE_SECRET }} -i ${{ secrets.SPACE_KEY }}
      - name: Add actions IP to trusted source for database
        run: |
          IP=$(curl -s ifconfig.me)
          doctl databases firewalls append ${{ secrets.DB_UUID }} --rule ip_addr:$IP
      - name: Push database migrations
        run: |
          export NODE_TLS_REJECT_UNAUTHORIZED=0
          bunx drizzle-kit migrate
          export NODE_TLS_REJECT_UNAUTHORIZED=1
      - name: Remove actions IP to trusted source for database
        run: |
          IP=$(curl -s ifconfig.me)
          JSON=$(doctl databases firewalls list ${{ secrets.DB_UUID }} --output json)
          ID=$(echo $JSON | jq -r '.[] | select(.value == '\"$IP\"').uuid')
          doctl databases firewalls remove ${{ secrets.DB_UUID }} --uuid $ID
      - name: Build Docker image
        run: |
          rm -rf apps/ill.cloud/.env
          export SPACE_URL=https://${{ secrets.SPACE_NAME }}.${{ secrets.SPACE_REGION }}.digitaloceanspaces.com
          spaces-cli down $SPACE_URL/cloud/production.env -o ./apps/ill.cloud/.env -k ${{ secrets.SPACE_SECRET }} -i ${{ secrets.SPACE_KEY }}
          spaces-cli down $SPACE_URL/cloud/ca-certificate.crt -o ./apps/ill.cloud/cert.crt -k ${{ secrets.SPACE_SECRET }} -i ${{ secrets.SPACE_KEY }}
          bunx turbo run build --filter=ill.cloud
          docker build -t ${{ secrets.REGISTRY_URL }}/ill-cloud:latest -f packages/deployment/docker/cloud.Dockerfile .
      - name: Authenticate with DO registry
        run: doctl registry login --expiry-seconds 1200
      - name: Push Docker Container
        run: docker push ${{ secrets.REGISTRY_URL }}/ill-cloud:latest
      - name: Execute Semantic Release
        run: |
          cd apps/ill.cloud
          bunx semantic-release
      - name: Commit changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git add apps/ill.cloud/package.json
          git commit -m "chore(release): [ill.cloud] update version and changelog [skip ci]"
          git push origin main